import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../../../core/providers/game_provider.dart';
import '../../../../core/providers/auth_provider.dart';

class HomeScreen extends StatelessWidget {
  const HomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topCenter,
            end: Alignment.bottomCenter,
            colors: [
              Color(0xFF1E3C72),
              Color(0xFF2A5298),
            ],
          ),
        ),
        child: SafeArea(
          child: Padding(
            padding: const EdgeInsets.all(20.0),
            child: Column(
              children: [
                const SizedBox(height: 40),
                const Text(
                  'üéÆ Touristoo 3D Runner',
                  style: TextStyle(
                    fontSize: 32,
                    fontWeight: FontWeight.bold,
                    color: Colors.white,
                  ),
                  textAlign: TextAlign.center,
                ),
                const SizedBox(height: 10),
                const Text(
                  '–í–µ—Ä—Å–∏—è 1.0.0',
                  style: TextStyle(
                    fontSize: 16,
                    color: Colors.white70,
                  ),
                ),
                const SizedBox(height: 60),
                Consumer2<GameProvider, AuthProvider>(
                  builder: (context, gameProvider, authProvider, child) {
                    return Column(
                      children: [
                        if (authProvider.isLoggedIn)
                          Container(
                            padding: const EdgeInsets.all(16),
                            decoration: BoxDecoration(
                              color: Colors.white.withOpacity(0.1),
                              borderRadius: BorderRadius.circular(12),
                            ),
                            child: Column(
                              children: [
                                Text(
                                  '–ü—Ä–∏–≤–µ—Ç, ${authProvider.currentPlayer?.name ?? '–ò–≥—Ä–æ–∫'}!',
                                  style: const TextStyle(
                                    fontSize: 18,
                                    color: Colors.white,
                                    fontWeight: FontWeight.bold,
                                  ),
                                ),
                                const SizedBox(height: 8),
                                Text(
                                  '–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${authProvider.currentPlayer?.bestScore ?? 0}',
                                  style: const TextStyle(
                                    fontSize: 14,
                                    color: Colors.white70,
                                  ),
                                ),
                              ],
                            ),
                          ),
                        const SizedBox(height: 40),
                        _buildPlayButton(context, gameProvider),
                        const SizedBox(height: 20),
                        _buildMenuButton(
                          context,
                          'üèÜ –†–µ–π—Ç–∏–Ω–≥',
                          () => _showComingSoon(context),
                        ),
                        const SizedBox(height: 12),
                        _buildMenuButton(
                          context,
                          '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏',
                          () => _showComingSoon(context),
                        ),
                        const SizedBox(height: 12),
                        _buildMenuButton(
                          context,
                          'üë§ –ü—Ä–æ—Ñ–∏–ª—å',
                          () => _showProfile(context, authProvider),
                        ),
                      ],
                    );
                  },
                ),
                const Spacer(),
                if (!Provider.of<AuthProvider>(context, listen: false).isLoggedIn)
                  _buildLoginButton(context),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildPlayButton(BuildContext context, GameProvider gameProvider) {
    return Container(
      width: double.infinity,
      height: 60,
      decoration: BoxDecoration(
        gradient: const LinearGradient(
          colors: [Color(0xFFFF6B6B), Color(0xFFEE5A24)],
        ),
        borderRadius: BorderRadius.circular(30),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.3),
            blurRadius: 10,
            offset: const Offset(0, 5),
          ),
        ],
      ),
      child: ElevatedButton(
        onPressed: () {
          gameProvider.startGame();
          _showGameScreen(context);
        },
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.transparent,
          shadowColor: Colors.transparent,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(30),
          ),
        ),
        child: const Text(
          'üéÆ –ò–ì–†–ê–¢–¨',
          style: TextStyle(
            fontSize: 24,
            fontWeight: FontWeight.bold,
            color: Colors.white,
          ),
        ),
      ),
    );
  }

  Widget _buildMenuButton(BuildContext context, String text, VoidCallback onTap) {
    return Container(
      width: double.infinity,
      height: 50,
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.1),
        borderRadius: BorderRadius.circular(25),
        border: Border.all(
          color: Colors.white.withOpacity(0.3),
          width: 1,
        ),
      ),
      child: ElevatedButton(
        onPressed: onTap,
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.transparent,
          shadowColor: Colors.transparent,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(25),
          ),
        ),
        child: Text(
          text,
          style: const TextStyle(
            fontSize: 18,
            color: Colors.white,
            fontWeight: FontWeight.w500,
          ),
        ),
      ),
    );
  }

  Widget _buildLoginButton(BuildContext context) {
    return Container(
      width: double.infinity,
      height: 50,
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.2),
        borderRadius: BorderRadius.circular(25),
      ),
      child: ElevatedButton(
        onPressed: () {
          Provider.of<AuthProvider>(context, listen: false).loginAsGuest();
        },
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.transparent,
          shadowColor: Colors.transparent,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(25),
          ),
        ),
        child: const Text(
          'üë§ –í–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å',
          style: TextStyle(
            fontSize: 16,
            color: Colors.white,
            fontWeight: FontWeight.w500,
          ),
        ),
      ),
    );
  }

  void _showGameScreen(BuildContext context) {
    showDialog(
      context: context,
      barrierDismissible: false,
      builder: (context) => AlertDialog(
        title: const Text('üéÆ –ò–≥—Ä–∞'),
        content: const Text('–ò–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω –±—É–¥–µ—Ç –∑–¥–µ—Å—å!\n\n–ü–æ–∫–∞ —á—Ç–æ —ç—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è.'),
        actions: [
          TextButton(
            onPressed: () {
              Navigator.of(context).pop();
              Provider.of<GameProvider>(context, listen: false).endGame();
            },
            child: const Text('–ó–∞–∫—Ä—ã—Ç—å'),
          ),
        ],
      ),
    );
  }

  void _showComingSoon(BuildContext context) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('üöß –°–∫–æ—Ä–æ'),
        content: const Text('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö!'),
        actions: [
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text('OK'),
          ),
        ],
      ),
    );
  }

  void _showProfile(BuildContext context, AuthProvider authProvider) {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('üë§ –ü—Ä–æ—Ñ–∏–ª—å'),
        content: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            if (authProvider.isLoggedIn) ...[
              Text('–ò–º—è: ${authProvider.currentPlayer?.name ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}'),
              Text('–£—Ä–æ–≤–µ–Ω—å: ${authProvider.currentPlayer?.level ?? 0}'),
              Text('–ú–æ–Ω–µ—Ç—ã: ${authProvider.currentPlayer?.coins ?? 0}'),
              Text('–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${authProvider.currentPlayer?.bestScore ?? 0}'),
            ] else
              const Text('–í—ã –Ω–µ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É'),
          ],
        ),
        actions: [
          if (authProvider.isLoggedIn)
            TextButton(
              onPressed: () {
                authProvider.logout();
                Navigator.of(context).pop();
              },
              child: const Text('–í—ã–π—Ç–∏'),
            ),
          TextButton(
            onPressed: () => Navigator.of(context).pop(),
            child: const Text('–ó–∞–∫—Ä—ã—Ç—å'),
          ),
        ],
      ),
    );
  }
}